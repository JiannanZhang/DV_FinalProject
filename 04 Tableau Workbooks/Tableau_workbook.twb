<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='DARWIN_TEMP (C##CS329E_JZ7674)' inline='true' name='oracle.42131.934406805600' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JZ7674' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jz7674'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ADELAIDE_TEMP].[TEMP_DATE]'>
              </expression>
              <expression op='[TOWNSVILLE_TEMP].[TEMP_DATE]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[ADELAIDE_TEMP].[TEMP_DATE]'>
                </expression>
                <expression op='[SYDNEY_TEMP].[TEMP_DATE]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[ADELAIDE_TEMP].[TEMP_DATE]'>
                  </expression>
                  <expression op='[PERTH_TEMP].[TEMP_DATE]'>
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[ADELAIDE_TEMP].[TEMP_DATE]'>
                    </expression>
                    <expression op='[MELBOURNE_TEMP].[TEMP_DATE]'>
                    </expression>
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[ADELAIDE_TEMP].[TEMP_DATE]'>
                      </expression>
                      <expression op='[HOBART_TEMP].[TEMP_DATE]'>
                      </expression>
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[ADELAIDE_TEMP].[TEMP_DATE]'>
                        </expression>
                        <expression op='[DARWIN_TEMP].[TEMP_DATE]'>
                        </expression>
                      </expression>
                    </clause>
                    <relation join='inner' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[ADELAIDE_TEMP].[TEMP_DATE]'>
                          </expression>
                          <expression op='[CANBERRA_TEMP].[TEMP_DATE]'>
                          </expression>
                        </expression>
                      </clause>
                      <relation join='inner' type='join'>
                        <clause type='join'>
                          <expression op='='>
                            <expression op='[ADELAIDE_TEMP].[TEMP_DATE]'>
                            </expression>
                            <expression op='[CAIRNS_TEMP].[TEMP_DATE]'>
                            </expression>
                          </expression>
                        </clause>
                        <relation join='inner' type='join'>
                          <clause type='join'>
                            <expression op='='>
                              <expression op='[ADELAIDE_TEMP].[TEMP_DATE]'>
                              </expression>
                              <expression op='[BRISBANE_TEMP].[TEMP_DATE]'>
                              </expression>
                            </expression>
                          </clause>
                          <relation name='ADELAIDE_TEMP' table='[C##CS329E_JZ7674].[ADELAIDE_TEMP]' type='table' />
                          <relation name='BRISBANE_TEMP' table='[C##CS329E_JZ7674].[BRISBANE_TEMP]' type='table' />
                        </relation>
                        <relation name='CAIRNS_TEMP' table='[C##CS329E_JZ7674].[CAIRNS_TEMP]' type='table' />
                      </relation>
                      <relation name='CANBERRA_TEMP' table='[C##CS329E_JZ7674].[CANBERRA_TEMP]' type='table' />
                    </relation>
                    <relation name='DARWIN_TEMP' table='[C##CS329E_JZ7674].[DARWIN_TEMP]' type='table' />
                  </relation>
                  <relation name='HOBART_TEMP' table='[C##CS329E_JZ7674].[HOBART_TEMP]' type='table' />
                </relation>
                <relation name='MELBOURNE_TEMP' table='[C##CS329E_JZ7674].[MELBOURNE_TEMP]' type='table' />
              </relation>
              <relation name='PERTH_TEMP' table='[C##CS329E_JZ7674].[PERTH_TEMP]' type='table' />
            </relation>
            <relation name='SYDNEY_TEMP' table='[C##CS329E_JZ7674].[SYDNEY_TEMP]' type='table' />
          </relation>
          <relation name='TOWNSVILLE_TEMP' table='[C##CS329E_JZ7674].[TOWNSVILLE_TEMP]' type='table' />
        </relation>
        <cols>
          <map key='[CITY (BRISBANE_TEMP)]' value='[BRISBANE_TEMP].[CITY]' />
          <map key='[CITY (CAIRNS_TEMP)]' value='[CAIRNS_TEMP].[CITY]' />
          <map key='[CITY (CANBERRA_TEMP)]' value='[CANBERRA_TEMP].[CITY]' />
          <map key='[CITY (DARWIN_TEMP)]' value='[DARWIN_TEMP].[CITY]' />
          <map key='[CITY (HOBART_TEMP)]' value='[HOBART_TEMP].[CITY]' />
          <map key='[CITY (MELBOURNE_TEMP)]' value='[MELBOURNE_TEMP].[CITY]' />
          <map key='[CITY (PERTH_TEMP)]' value='[PERTH_TEMP].[CITY]' />
          <map key='[CITY (SYDNEY_TEMP)]' value='[SYDNEY_TEMP].[CITY]' />
          <map key='[CITY (TOWNSVILLE_TEMP)]' value='[TOWNSVILLE_TEMP].[CITY]' />
          <map key='[CITY]' value='[ADELAIDE_TEMP].[CITY]' />
          <map key='[TEMP_DATE (BRISBANE_TEMP)]' value='[BRISBANE_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_DATE (CAIRNS_TEMP)]' value='[CAIRNS_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_DATE (CANBERRA_TEMP)]' value='[CANBERRA_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_DATE (DARWIN_TEMP)]' value='[DARWIN_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_DATE (HOBART_TEMP)]' value='[HOBART_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_DATE (MELBOURNE_TEMP)]' value='[MELBOURNE_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_DATE (PERTH_TEMP)]' value='[PERTH_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_DATE (SYDNEY_TEMP)]' value='[SYDNEY_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_DATE (TOWNSVILLE_TEMP)]' value='[TOWNSVILLE_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_DATE]' value='[ADELAIDE_TEMP].[TEMP_DATE]' />
          <map key='[TEMP_MAX (BRISBANE_TEMP)]' value='[BRISBANE_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MAX (CAIRNS_TEMP)]' value='[CAIRNS_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MAX (CANBERRA_TEMP)]' value='[CANBERRA_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MAX (DARWIN_TEMP)]' value='[DARWIN_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MAX (HOBART_TEMP)]' value='[HOBART_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MAX (MELBOURNE_TEMP)]' value='[MELBOURNE_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MAX (PERTH_TEMP)]' value='[PERTH_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MAX (SYDNEY_TEMP)]' value='[SYDNEY_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MAX (TOWNSVILLE_TEMP)]' value='[TOWNSVILLE_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MAX]' value='[ADELAIDE_TEMP].[TEMP_MAX]' />
          <map key='[TEMP_MIN (BRISBANE_TEMP)]' value='[BRISBANE_TEMP].[TEMP_MIN]' />
          <map key='[TEMP_MIN (CAIRNS_TEMP)]' value='[CAIRNS_TEMP].[TEMP_MIN]' />
          <map key='[TEMP_MIN (CANBERRA_TEMP)]' value='[CANBERRA_TEMP].[TEMP_MIN]' />
          <map key='[TEMP_MIN (DARWIN_TEMP)]' value='[DARWIN_TEMP].[TEMP_MIN]' />
          <map key='[TEMP_MIN (HOBART_TEMP)]' value='[HOBART_TEMP].[TEMP_MIN]' />
          <map key='[TEMP_MIN (MELBOURNE_TEMP)]' value='[MELBOURNE_TEMP].[TEMP_MIN]' />
          <map key='[TEMP_MIN (PERTH_TEMP)]' value='[PERTH_TEMP].[TEMP_MIN]' />
          <map key='[TEMP_MIN (SYDNEY_TEMP)]' value='[SYDNEY_TEMP].[TEMP_MIN]' />
          <map key='[TEMP_MIN (TOWNSVILLE_TEMP)]' value='[TOWNSVILLE_TEMP].[TEMP_MIN]' />
          <map key='[TEMP_MIN]' value='[ADELAIDE_TEMP].[TEMP_MIN]' />
        </cols>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE]</local-name>
            <parent-name>[ADELAIDE_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MIN]</local-name>
            <parent-name>[ADELAIDE_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MAX]</local-name>
            <parent-name>[ADELAIDE_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[ADELAIDE_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE (BRISBANE_TEMP)]</local-name>
            <parent-name>[BRISBANE_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MIN (BRISBANE_TEMP)]</local-name>
            <parent-name>[BRISBANE_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MAX (BRISBANE_TEMP)]</local-name>
            <parent-name>[BRISBANE_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (BRISBANE_TEMP)]</local-name>
            <parent-name>[BRISBANE_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE (CAIRNS_TEMP)]</local-name>
            <parent-name>[CAIRNS_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MIN (CAIRNS_TEMP)]</local-name>
            <parent-name>[CAIRNS_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MAX (CAIRNS_TEMP)]</local-name>
            <parent-name>[CAIRNS_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (CAIRNS_TEMP)]</local-name>
            <parent-name>[CAIRNS_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE (CANBERRA_TEMP)]</local-name>
            <parent-name>[CANBERRA_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TEMP_MIN (CANBERRA_TEMP)]</local-name>
            <parent-name>[CANBERRA_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TEMP_MAX (CANBERRA_TEMP)]</local-name>
            <parent-name>[CANBERRA_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (CANBERRA_TEMP)]</local-name>
            <parent-name>[CANBERRA_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE (DARWIN_TEMP)]</local-name>
            <parent-name>[DARWIN_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MIN (DARWIN_TEMP)]</local-name>
            <parent-name>[DARWIN_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MAX (DARWIN_TEMP)]</local-name>
            <parent-name>[DARWIN_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (DARWIN_TEMP)]</local-name>
            <parent-name>[DARWIN_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE (HOBART_TEMP)]</local-name>
            <parent-name>[HOBART_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>22</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MIN (HOBART_TEMP)]</local-name>
            <parent-name>[HOBART_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MAX (HOBART_TEMP)]</local-name>
            <parent-name>[HOBART_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (HOBART_TEMP)]</local-name>
            <parent-name>[HOBART_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE (MELBOURNE_TEMP)]</local-name>
            <parent-name>[MELBOURNE_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>26</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MIN (MELBOURNE_TEMP)]</local-name>
            <parent-name>[MELBOURNE_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MAX (MELBOURNE_TEMP)]</local-name>
            <parent-name>[MELBOURNE_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (MELBOURNE_TEMP)]</local-name>
            <parent-name>[MELBOURNE_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE (PERTH_TEMP)]</local-name>
            <parent-name>[PERTH_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>30</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MIN (PERTH_TEMP)]</local-name>
            <parent-name>[PERTH_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MAX (PERTH_TEMP)]</local-name>
            <parent-name>[PERTH_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (PERTH_TEMP)]</local-name>
            <parent-name>[PERTH_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE (SYDNEY_TEMP)]</local-name>
            <parent-name>[SYDNEY_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>34</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MIN (SYDNEY_TEMP)]</local-name>
            <parent-name>[SYDNEY_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MAX (SYDNEY_TEMP)]</local-name>
            <parent-name>[SYDNEY_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (SYDNEY_TEMP)]</local-name>
            <parent-name>[SYDNEY_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TEMP_DATE (TOWNSVILLE_TEMP)]</local-name>
            <parent-name>[TOWNSVILLE_TEMP]</parent-name>
            <remote-alias>TEMP_DATE</remote-alias>
            <ordinal>38</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MIN</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MIN (TOWNSVILLE_TEMP)]</local-name>
            <parent-name>[TOWNSVILLE_TEMP]</parent-name>
            <remote-alias>TEMP_MIN</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP_MAX</remote-name>
            <remote-type>4</remote-type>
            <local-name>[TEMP_MAX (TOWNSVILLE_TEMP)]</local-name>
            <parent-name>[TOWNSVILLE_TEMP]</parent-name>
            <remote-alias>TEMP_MAX</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (TOWNSVILLE_TEMP)]</local-name>
            <parent-name>[TOWNSVILLE_TEMP]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX:qk]&quot;' value='Avg. Temp Max (Adelaide Temp)' />
        </aliases>
      </column>
      <column datatype='string' name='[CITY (BRISBANE_TEMP)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[CITY (CAIRNS_TEMP)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[CITY (CANBERRA_TEMP)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[CITY (DARWIN_TEMP)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[CITY (HOBART_TEMP)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[CITY (MELBOURNE_TEMP)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[CITY (PERTH_TEMP)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[CITY (SYDNEY_TEMP)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[CITY (TOWNSVILLE_TEMP)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Temp Date (Brisbane Temp)' datatype='datetime' name='[TEMP_DATE (BRISBANE_TEMP)]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Date (Cairns Temp)' datatype='datetime' name='[TEMP_DATE (CAIRNS_TEMP)]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Date (Canberra Temp)' datatype='datetime' name='[TEMP_DATE (CANBERRA_TEMP)]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Date (Darwin Temp)' datatype='datetime' name='[TEMP_DATE (DARWIN_TEMP)]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Date (Hobart Temp)' datatype='datetime' name='[TEMP_DATE (HOBART_TEMP)]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Date (Melbourne Temp)' datatype='datetime' name='[TEMP_DATE (MELBOURNE_TEMP)]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Date (Perth Temp)' datatype='datetime' name='[TEMP_DATE (PERTH_TEMP)]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Date (Sydney Temp)' datatype='datetime' name='[TEMP_DATE (SYDNEY_TEMP)]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Date (Townsville Temp)' datatype='datetime' name='[TEMP_DATE (TOWNSVILLE_TEMP)]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Date' datatype='datetime' name='[TEMP_DATE]' role='dimension' type='ordinal'>
      </column>
      <column caption='Temp Max (Brisbane Temp)' datatype='real' name='[TEMP_MAX (BRISBANE_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Max (Cairns Temp)' datatype='real' name='[TEMP_MAX (CAIRNS_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Max (Canberra Temp)' datatype='real' name='[TEMP_MAX (CANBERRA_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Max (Darwin Temp)' datatype='real' name='[TEMP_MAX (DARWIN_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Max (Hobart Temp)' datatype='real' name='[TEMP_MAX (HOBART_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Max (Melbourne Temp)' datatype='real' name='[TEMP_MAX (MELBOURNE_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Max (Perth Temp)' datatype='real' name='[TEMP_MAX (PERTH_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Max (Sydney Temp)' datatype='real' name='[TEMP_MAX (SYDNEY_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Max (Townsville Temp)' datatype='real' name='[TEMP_MAX (TOWNSVILLE_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Max' datatype='real' name='[TEMP_MAX]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min (Brisbane Temp)' datatype='real' name='[TEMP_MIN (BRISBANE_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min (Cairns Temp)' datatype='real' name='[TEMP_MIN (CAIRNS_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min (Canberra Temp)' datatype='real' name='[TEMP_MIN (CANBERRA_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min (Darwin Temp)' datatype='real' name='[TEMP_MIN (DARWIN_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min (Hobart Temp)' datatype='real' name='[TEMP_MIN (HOBART_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min (Melbourne Temp)' datatype='real' name='[TEMP_MIN (MELBOURNE_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min (Perth Temp)' datatype='real' name='[TEMP_MIN (PERTH_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min (Sydney Temp)' datatype='real' name='[TEMP_MIN (SYDNEY_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min (Townsville Temp)' datatype='real' name='[TEMP_MIN (TOWNSVILLE_TEMP)]' role='measure' type='quantitative'>
      </column>
      <column caption='Temp Min' datatype='real' name='[TEMP_MIN]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[TEMP_MAX (BRISBANE_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (BRISBANE_TEMP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TEMP_MAX (CAIRNS_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (CAIRNS_TEMP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TEMP_MAX (CANBERRA_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (CANBERRA_TEMP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TEMP_MAX (DARWIN_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (DARWIN_TEMP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TEMP_MAX (HOBART_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (HOBART_TEMP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TEMP_MAX (MELBOURNE_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (MELBOURNE_TEMP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TEMP_MAX (PERTH_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (PERTH_TEMP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TEMP_MAX (SYDNEY_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (SYDNEY_TEMP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TEMP_MAX (TOWNSVILLE_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (TOWNSVILLE_TEMP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TEMP_MAX]' derivation='Avg' name='[avg:TEMP_MAX:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (TOWNSVILLE_TEMP):qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42131.934406805600]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (CAIRNS_TEMP):qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (PERTH_TEMP):qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (HOBART_TEMP):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (DARWIN_TEMP):qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (SYDNEY_TEMP):qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (CANBERRA_TEMP):qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (MELBOURNE_TEMP):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (BRISBANE_TEMP):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Boxplot cross cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='DARWIN_TEMP (C##CS329E_JZ7674)' name='oracle.42131.934406805600' />
          </datasources>
          <datasource-dependencies datasource='oracle.42131.934406805600'>
            <column caption='Temp Date' datatype='datetime' name='[TEMP_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Temp Max (Brisbane Temp)' datatype='real' name='[TEMP_MAX (BRISBANE_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Cairns Temp)' datatype='real' name='[TEMP_MAX (CAIRNS_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Canberra Temp)' datatype='real' name='[TEMP_MAX (CANBERRA_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Darwin Temp)' datatype='real' name='[TEMP_MAX (DARWIN_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Hobart Temp)' datatype='real' name='[TEMP_MAX (HOBART_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Melbourne Temp)' datatype='real' name='[TEMP_MAX (MELBOURNE_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Perth Temp)' datatype='real' name='[TEMP_MAX (PERTH_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Sydney Temp)' datatype='real' name='[TEMP_MAX (SYDNEY_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Townsville Temp)' datatype='real' name='[TEMP_MAX (TOWNSVILLE_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max' datatype='real' name='[TEMP_MAX]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TEMP_MAX (BRISBANE_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (BRISBANE_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (CAIRNS_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (CAIRNS_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (CANBERRA_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (CANBERRA_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (DARWIN_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (DARWIN_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (HOBART_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (HOBART_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (MELBOURNE_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (MELBOURNE_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (PERTH_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (PERTH_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (SYDNEY_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (SYDNEY_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (TOWNSVILLE_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (TOWNSVILLE_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX]' derivation='Avg' name='[avg:TEMP_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_DATE]' derivation='Year' name='[yr:TEMP_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42131.934406805600].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (BRISBANE_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (CAIRNS_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (CANBERRA_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (DARWIN_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (HOBART_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (MELBOURNE_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (PERTH_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (SYDNEY_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (TOWNSVILLE_TEMP):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.42131.934406805600].[yr:TEMP_DATE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1985' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1986' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1987' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1988' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1989' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1990' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1991' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1992' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1993' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1994' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1995' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1996' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1997' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1998' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1999' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2000' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2001' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2002' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2003' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2004' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2005' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2006' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2010' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2011' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2012' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2013' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2014' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42131.934406805600].[:Measure Names]</column>
            <column>[oracle.42131.934406805600].[yr:TEMP_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42131.934406805600].[yr:TEMP_DATE:ok]' value='28' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_forest' />
            <format attr='opacity' id='refline0' value='219' />
          </style-rule>
        </style>
        <panes>
          <pane id='11'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42131.934406805600].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[oracle.42131.934406805600].[Multiple Values]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' formula='average' id='refline0' label-type='automatic' scope='per-cell' symmetric='false' value-column='[oracle.42131.934406805600].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42131.934406805600].[Multiple Values]</rows>
        <cols>[oracle.42131.934406805600].[yr:TEMP_DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='cities_temp_maxavgs_trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='DARWIN_TEMP (C##CS329E_JZ7674)' name='oracle.42131.934406805600' />
          </datasources>
          <datasource-dependencies datasource='oracle.42131.934406805600'>
            <column caption='Temp Date' datatype='datetime' name='[TEMP_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Temp Max (Brisbane Temp)' datatype='real' name='[TEMP_MAX (BRISBANE_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Cairns Temp)' datatype='real' name='[TEMP_MAX (CAIRNS_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Canberra Temp)' datatype='real' name='[TEMP_MAX (CANBERRA_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Darwin Temp)' datatype='real' name='[TEMP_MAX (DARWIN_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Hobart Temp)' datatype='real' name='[TEMP_MAX (HOBART_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Melbourne Temp)' datatype='real' name='[TEMP_MAX (MELBOURNE_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Perth Temp)' datatype='real' name='[TEMP_MAX (PERTH_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Sydney Temp)' datatype='real' name='[TEMP_MAX (SYDNEY_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max (Townsville Temp)' datatype='real' name='[TEMP_MAX (TOWNSVILLE_TEMP)]' role='measure' type='quantitative'>
            </column>
            <column caption='Temp Max' datatype='real' name='[TEMP_MAX]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TEMP_MAX (BRISBANE_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (BRISBANE_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (CAIRNS_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (CAIRNS_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (CANBERRA_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (CANBERRA_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (DARWIN_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (DARWIN_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (HOBART_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (HOBART_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (MELBOURNE_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (MELBOURNE_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (PERTH_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (PERTH_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (SYDNEY_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (SYDNEY_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX (TOWNSVILLE_TEMP)]' derivation='Avg' name='[avg:TEMP_MAX (TOWNSVILLE_TEMP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_MAX]' derivation='Avg' name='[avg:TEMP_MAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEMP_DATE]' derivation='Year' name='[yr:TEMP_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42131.934406805600].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (BRISBANE_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (CAIRNS_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (CANBERRA_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (DARWIN_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (HOBART_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (MELBOURNE_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (PERTH_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (SYDNEY_TEMP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42131.934406805600].[avg:TEMP_MAX (TOWNSVILLE_TEMP):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.42131.934406805600].[yr:TEMP_DATE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1985' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1986' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1987' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1988' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1989' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1990' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1991' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1992' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1993' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1994' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1995' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1996' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1997' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1998' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='1999' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2000' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2001' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2002' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2003' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2004' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2005' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2006' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2010' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2011' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2012' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2013' />
              <groupfilter function='member' level='[yr:TEMP_DATE:ok]' member='2014' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42131.934406805600].[:Measure Names]</column>
            <column>[oracle.42131.934406805600].[yr:TEMP_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42131.934406805600].[yr:TEMP_DATE:ok]' value='28' />
          </style-rule>
        </style>
        <panes>
          <pane id='11'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42131.934406805600].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42131.934406805600].[Multiple Values]</rows>
        <cols>[oracle.42131.934406805600].[yr:TEMP_DATE:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='cities_temp_maxavgs_trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='11' param='[oracle.42131.934406805600].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42126.749377604200].[none:TEMP_DATE:nk]</field>
          <field>[oracle.42126.751980173600].[none:TEMP_DATE:ok]</field>
          <field>[oracle.42131.917822731500].[yr:TEMP_DATE (BRISBANE_TEMP):ok]</field>
          <field>[oracle.42131.917822731500].[yr:TEMP_DATE:ok]</field>
          <field>[oracle.42131.931608506900].[yr:TEMP_DATE:ok]</field>
          <field>[oracle.42131.934406805600].[:Measure Names]</field>
          <field>[oracle.42131.934406805600].[yr:TEMP_DATE (BRISBANE_TEMP):ok]</field>
          <field>[oracle.42131.934406805600].[yr:TEMP_DATE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Boxplot cross cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='11' param='[oracle.42131.934406805600].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42126.749377604200].[none:TEMP_DATE:nk]</field>
          <field>[oracle.42126.751980173600].[none:TEMP_DATE:ok]</field>
          <field>[oracle.42131.917822731500].[yr:TEMP_DATE (BRISBANE_TEMP):ok]</field>
          <field>[oracle.42131.917822731500].[yr:TEMP_DATE:ok]</field>
          <field>[oracle.42131.931608506900].[yr:TEMP_DATE:ok]</field>
          <field>[oracle.42131.934406805600].[:Measure Names]</field>
          <field>[oracle.42131.934406805600].[yr:TEMP_DATE (BRISBANE_TEMP):ok]</field>
          <field>[oracle.42131.934406805600].[yr:TEMP_DATE:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[oracle.42131.934406805600].[Multiple Values]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='cities_temp_maxavgs_trend' width='384'>
      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
      LsRvDgoEAsGVZ01/C8hzHb7xX7/IvNdBzJ6nHt/Kpx+8iT/6o//MTbtv4eUX9vIL//rfsrW3
      edV24reABAKB4PLieh4HihX+aSFH1XHpDeprHwFs2fkePvyu3WRPPM9/+aeDDB92adm8m098
      /GN06DWe3XeYrb13rvXXCgQCgeB1cD2P/296if80MkvROf2702sqAJKssGvPHex/4gf8xd99
      ix13fpBSNkNL9zYAmpqS1IerACwsLOA4/gsTXNclmUyuZVMEAoHgHKp2lYdPPcyBhQPs7tzN
      Hd13kAy8s21PzrL57ZPTfGs+C8DWcIC+oMF83VpbAfA8j2KxyHXvvo/f37KN3/v9r9J/93WY
      tm/0HdtGUvzfs04kEo3tLMs67/6uRVzPwwU8DyRAkd6eX/UTCASvj+d5jOZH+d3nfpcDiwfw
      8Pje6PfoCHfw8aGP89HBj5IKpN5R96rneZyq1Pn8kXEOlqrIwMfbU/yHjZ006yq2562tALh2
      nS///r/nI5//bbr1Kq4n09G7gSe+s4/qB2/jhX0H2fCejwGg66vf4Wrb9lo25aIo2g4Zy6bi
      uFQcF8vzMF2PqutSXf675rrUHI+K62J7HrUz1q04LqbrL6s5Lqbn4XgeEhBRFWKKQkxViKoy
      cVUhrCg06ypBRSaqyERVhaiiENf8qSZezXfZma9bjFfr1FyPwbBBh7F+3yn8VshYNifLNfYX
      Kxwr1YipCh9tS7IzGrxqjKnt2nz75Lf50stfomyV0WSNbU3bOLR0iNnyLF/d/1W+fvTrvH/D
      +/nE0CcYSAxc6Sa/ZRzP458Wcvz7k1NkLIegLPFbGzr4XE8L8vJ1USVpjYvAnsfJV5/hm9/+
      IZYnc99PPcSdN27kO//z67x4dITOvq384qc/SdhY/cact7sIXHVcDpYq7M2VeSxT5KV8Gcfz
      WDkRZ08vJ9KZHwkkJAKyRFRVSGoqIVkmqSkkNF847kpFuTUeJqGJVzm8GZbrMlu3mK1bDFfq
      HCpVGanWOVKqkrZs3OULLEvQaehcHw1ySzzMjdEQ3QGdDkO7aozYlabiuMzWTcaqJq8Uyhwp
      1ThVqTFareN4q+8VGXiwJcHne1u4MRa+Uk3G8zymSlP84Qt/yLMzzwKwKbGJ39z1m+zu3M1E
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Boxplot cross cities' width='384'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
